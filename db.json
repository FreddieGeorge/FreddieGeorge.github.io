{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/DBUS-CXX相关配置.md","hash":"c58606dc874c101a1c9e20ad5a198324d7dfbc5e","modified":1673856131826},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1673850746130},{"_id":"source/about/index.md","hash":"a4c235ab396036e721de42daff25348581a16af4","modified":1673857469959},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1673857238072},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1673857237260},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":1673857237478},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"088788e149051fc0a3c6096ba95e35a8344de04b","modified":1673857238075},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"30e3f4ccfef8474c05cf0b1eb02e91bd0a152807","modified":1673857237471},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1673857238076},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1673857238076},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1673857238076},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1673857238077},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1673857238077},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1673857238077},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1673857238078},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1673857238078},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1673857238079},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1673857237262},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1673857237266},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1673857237269},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1673857237271},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1673857237272},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"db000a6a0cec19d32a6e7e94cd4c478500d9c5ac","modified":1673857237277},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1673857237278},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1673857237278},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1673857237283},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":1673857237283},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1673857237287},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1673857237287},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1673857237271},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1673857237269},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1673857237272},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1673857237273},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1673857237274},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1673857237275},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1673857237276},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1673857237277},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1673857237279},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1673857237283},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1673857237285},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1673857237286},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1673857237452},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1673857237448},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1673857237459},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":1673857237468},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1673857237459},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1673857237467},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1673857237447},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1673857237448},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":1673857237449},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1673857237452},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1673857237453},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1673857237467},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1673857237469},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1673857237469},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1673857237470},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1673857237471},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1673857237436},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1673857237436},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1673857237451},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1673857237453},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1673857237460},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1673857237460},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1673857237446},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1673857237467},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1673857237469},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1673857237469},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1673857237262},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1673857238065},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1673857238066},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1673857238069},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1673857237482},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1673857238049},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1673857237434},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1673857238056},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1673857237435},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1673857237438},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1673857237448},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1673857237452},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1673857237458},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1673857237459},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1673857237468},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1673857237470},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1673857238074},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1673857237272},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1673857237274},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1673857237275},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1673857237276},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1673857237276},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1673857237278},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1673857237284},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":1673857237288},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1673857237289},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1673857237289},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1673857237290},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1673857237270},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1673857237287},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1673857237270},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1673857237282},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":1673857237267},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1673857237268},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1673857237273},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"e3713fa78e0fc14a239360b020068d8513573ae4","modified":1673857237275},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1673857237275},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1673857237277},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1673857237279},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"e49506e9895e255e0e53f34a11d325f83109c1b0","modified":1673857237279},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1673857237283},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":1673857237288},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1673857237271},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"9d13392cea94b66d86422ad17c66e5ae67ce1d32","modified":1673857237274},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":1673857237280},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1673857237280},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1673857237286},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1673857237286},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1673857237287},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1673857237447},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":1673857237450},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1673857237451},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":1673857237452},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1673857237453},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1673857237454},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1673857237460},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1673857238059},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1673857238060},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1673857238070},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1673857238061},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1673857238057},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1673857238059},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":1673857238063},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1673857238060},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1673857238067},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1673857238062},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1673857238062},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1673857238067},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1673857238063},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1673857238066},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1673857238068},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1673857238064},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1673857238065},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1673857238069},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":1673857238071},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1673857238071},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1673857238072},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1673857238058},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1673857238059},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1673857238062},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1673857238063},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1673857238064},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1673857238064},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1673857238065},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1673857238065},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1673857238069},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1673857238070},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1673857238070},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1673857238071},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1673857238072},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1673857238072},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1673857238072},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1673857238073},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1673857238049},{"_id":"public/local-search.xml","hash":"76f988f71ce8ebc40df88dfc584acd333ba9f9fa","modified":1673860199516},{"_id":"public/about/index.html","hash":"df067f4a23885a524460626768cad2bef715cdfd","modified":1673860199516},{"_id":"public/index.html","hash":"a9464cadb1c05b68e787d729bede87ce712cd594","modified":1673860199516},{"_id":"public/archives/index.html","hash":"ee63d7d4eb5b0f7a01f0a8c7561992e9e53cc665","modified":1673860199516},{"_id":"public/404.html","hash":"4f748fa73741807be8a00e58bca7d9897acedef6","modified":1673860199516},{"_id":"public/archives/2023/index.html","hash":"8895105bb79540f62f899f99d4ba543a57a69db9","modified":1673860199516},{"_id":"public/archives/2023/01/index.html","hash":"3ad39fcc63f8e55742b7400a6eedfbcebcbc9ce0","modified":1673860199516},{"_id":"public/tags/index.html","hash":"964037028b601a0abeaab827b2b6065459a74c5c","modified":1673860199516},{"_id":"public/categories/index.html","hash":"be78f149d92bf3b6ae70e8f7335294bc709913fa","modified":1673860199516},{"_id":"public/links/index.html","hash":"c8d3027d767d4028eb00db2fe844ca5a7f414fe5","modified":1673860199516},{"_id":"public/2023/01/16/DBUS-CXX相关配置/index.html","hash":"552ceeab7f07400e037d090eeaddb3843c400071","modified":1673860199516},{"_id":"public/2023/01/16/hello-world/index.html","hash":"170ca35cb7fc866d95423672f809ee99c3ab1783","modified":1673860199516},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1673860199516},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1673860199516},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1673860199516},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1673860199516},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1673860199516},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1673860199516},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1673860199516},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1673860199516},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1673860199516},{"_id":"public/css/main.css","hash":"4d4a763ef5e9ab2602c46e812d846bba7a277757","modified":1673860199516},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1673860199516},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1673860199516},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1673860199516},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1673860199516},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1673860199516},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1673860199516},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1673860199516},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1673860199516}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2023-01-16T08:22:49.000Z","layout":"about","_content":"\n这里是flork的个人博客","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-01-16 16:22:49\nlayout: about\n---\n\n这里是flork的个人博客","updated":"2023-01-16T08:24:29.959Z","path":"about/index.html","comments":1,"_id":"clcyl582s0001l8vl21ey38og","content":"<p>这里是flork的个人博客</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这里是flork的个人博客</p>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-01-16T07:43:11.756Z","updated":"2023-01-16T06:32:26.130Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcyl582p0000l8vl5o35cuyk","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"DBUS-CXX相关配置","date":"2023-01-16T08:01:42.000Z","_content":"# DBUS-CXX\n\n---\n\n# 介绍\n\nDBUS-CXX是一个dbus协议基础上提供的C++ api封装。所以我们很多地方可以结合文档和例程直接看源码来进行学习，底层的很多都是linux的官方库。\n\n# 参考资料\n\n需先了解DBUS基础知识，建议看DBUS官方文档\n\nDBUS-CXX也是建议看官方文档，各个配置环境也先**仔细看对应的文档**再操作\n\nDBUS-CXX的中文资料较少，耐心看完官方文档\n\n[dbus-cxx: dbus-cxx Library](https://dbus-cxx.github.io/index.html)\n\n[[C++]:libsigc++ programming @ 玄根白丁的部落格 :: 痞客邦 :: (pixnet.net)](https://shangenpoden.pixnet.net/blog/post/249943675)\n\n# 配置环境\n\n## cmake\n\n1. 检查自己是否有cmake并且版本是否大于3.12，若都无，从[该网站](https://cmake.org/download/)下载cmake源码\n\n1. 解压cmake 源码，之后进入cmake目录执行 `sudo ./configure`,然后执行`sudo make && make install`\n\n## libsigc++\n\n> 从官方文档中可以看到，从压缩包build比git出来的项目更容易，git出来在make的时候会遇到错误\n> \n1. `sudo apt-get install mm-common`下载mm-common\n2. 下载源码 `wget https://download.gnome.org/sources/libsigc++/3.0/libsigc%2B%2B-3.0.0.tar.xz`  并解压缩，然后进入解压出来的目录\n    \n    > 这边选择3.0.0版本，3.2版本利用autotools编译会出现问题，暂时未找到解决方法\n    > \n3. `mkdir __install`\n4. 之后执行`./configure  --prefix=$PWD/__install`,如果是交叉编译，需要加上`--host=xxxx`\n5. `make && make install` \n6. 可以看见在__install 下面生成了如下目录，对应着头文件，库文件\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled.png) -->\n\n## dbus-cxx\n\n1. 下载源码 `git clone https://github.com/dbus-cxx/dbus-cxx.git`\n2. 添加环境变量，指定libsig++安装出来的pkgconfig的位置，该句可以加入你的shell配置文件中\n`export PKG_CONFIG_PATH=/home/flork/git/libsigc++-3.0.0/__install/lib/pkgconfig:$PKG_CONFIG_PATH`\n3. 按照这些步骤安装即可\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%201.png) -->\n\n编译需要添加指令`pkg-config --cflags --libs dbus-cxx-2.0`\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%202.png) -->\n\n# 例程\n\n> 例程来自官方文档例程，详细介绍去文档[dbus-cxx: Quick start example 0: A simple server and client](https://dbus-cxx.github.io/quick_start_example_0.html)\n> \n\n## server.cpp\n\n```cpp\n#include <dbus-cxx.h>\n#include <unistd.h>\n\ndouble add(double param1, double param2) { return param1 + param2; }\n\nint main()\n{\n    std::shared_ptr<DBus::Dispatcher> dispatcher = DBus::StandaloneDispatcher::create();\n\n    std::shared_ptr<DBus::Connection> conn = dispatcher->create_connection(DBus::BusType::SESSION);\n\n    if (conn->request_name(\"dbuscxx.quickstart_0.server\", DBUSCXX_NAME_FLAG_REPLACE_EXISTING) != DBus::RequestNameResponse::PrimaryOwner)\n        return 1;\n\n    // create an object on us\n    std::shared_ptr<DBus::Object> object = conn->create_object(\"/dbuscxx/quickstart_0\", DBus::ThreadForCalling::DispatcherThread);\n\n    // add a method that can be called over the dbus\n    object->create_method<double(double, double)>(\"dbuscxx.Quickstart\", \"add\", sigc::ptr_fun(add));\n\n    sleep(10);\n\n    return 0;\n}\n```\n\n## client.cpp\n\n```cpp\n#include <dbus-cxx.h>\n#include <iostream>\n\nint main()\n{\n    std::shared_ptr<DBus::Dispatcher> dispatcher;\n    dispatcher = DBus::StandaloneDispatcher::create();\n\n    std::shared_ptr<DBus::Connection> connection;\n    connection = dispatcher->create_connection(DBus::BusType::SESSION);\n\n    // create an object proxy, which stands in for a real object.\n    // a proxy exists over the dbus\n    std::shared_ptr<DBus::ObjectProxy> object;\n    object = connection->create_object_proxy(\"dbuscxx.quickstart_0.server\", \"/dbuscxx/quickstart_0\");\n\n    // a method proxy acts like a real method, but will go over the dbus\n    // to do its work.\n    DBus::MethodProxy<double(double, double)> &add_proxy = *(object->create_method<double(double, double)>(\"dbuscxx.Quickstart\", \"add\"));\n\n    double answer;\n    answer = add_proxy( 1.1, 2.2 );\n\n    std::cout << \"1.1 + 2.2 = \" << answer << std::endl;\n\n    return 0;\n}\n```\n\n## Makefile\n\n```cpp\n.PHONY:clean\n\nCXXFLAG\t\t\t  = -std=c++17 -O3\nPKGFLAG       = `pkg-config --cflags --libs dbus-cxx-2.0`\n\nSERVER_SRC\t\t= server.cpp\nCLIENT_SRC\t\t= client.cpp\n\nSERVER_TARGET   = server\nCLIENT_TARGET   = client\n\nall:$(SERVER_TARGET) $(CLIENT_TARGET)\n\n$(SERVER_TARGET):$(SERVER_SRC)\n\tg++ $(CXXFLAG)  $(SERVER_SRC) -o $(SERVER_TARGET) $(PKGFLAG) \n\n$(CLIENT_TARGET):$(CLIENT_SRC)\n\tg++ $(CXXFLAG) $(CLIENT_SRC) -o $(CLIENT_TARGET) $(PKGFLAG)\n\nclean:\n\t@if [ -e \"$(CLIENT_TARGET)\" ] ; then \\\n\t\techo \"rm $(CLIENT_TARGET)\" ; \\\n\t\trm $(CLIENT_TARGET) ; \\\n\tfi;\n\n\t@if [ -e \"$(SERVER_TARGET)\" ] ; then \\\n\t\techo \"rm $(SERVER_TARGET)\" ; \\\n\t\trm $(SERVER_TARGET) ; \\\n\tfi;\n```\n\n## 运行结果\n\n先运行 server ，再运行 client\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%203.png) -->","source":"_posts/DBUS-CXX相关配置.md","raw":"---\ntitle: DBUS-CXX相关配置\ndate: 2023-01-16 16:01:42\ntags: \n---\n# DBUS-CXX\n\n---\n\n# 介绍\n\nDBUS-CXX是一个dbus协议基础上提供的C++ api封装。所以我们很多地方可以结合文档和例程直接看源码来进行学习，底层的很多都是linux的官方库。\n\n# 参考资料\n\n需先了解DBUS基础知识，建议看DBUS官方文档\n\nDBUS-CXX也是建议看官方文档，各个配置环境也先**仔细看对应的文档**再操作\n\nDBUS-CXX的中文资料较少，耐心看完官方文档\n\n[dbus-cxx: dbus-cxx Library](https://dbus-cxx.github.io/index.html)\n\n[[C++]:libsigc++ programming @ 玄根白丁的部落格 :: 痞客邦 :: (pixnet.net)](https://shangenpoden.pixnet.net/blog/post/249943675)\n\n# 配置环境\n\n## cmake\n\n1. 检查自己是否有cmake并且版本是否大于3.12，若都无，从[该网站](https://cmake.org/download/)下载cmake源码\n\n1. 解压cmake 源码，之后进入cmake目录执行 `sudo ./configure`,然后执行`sudo make && make install`\n\n## libsigc++\n\n> 从官方文档中可以看到，从压缩包build比git出来的项目更容易，git出来在make的时候会遇到错误\n> \n1. `sudo apt-get install mm-common`下载mm-common\n2. 下载源码 `wget https://download.gnome.org/sources/libsigc++/3.0/libsigc%2B%2B-3.0.0.tar.xz`  并解压缩，然后进入解压出来的目录\n    \n    > 这边选择3.0.0版本，3.2版本利用autotools编译会出现问题，暂时未找到解决方法\n    > \n3. `mkdir __install`\n4. 之后执行`./configure  --prefix=$PWD/__install`,如果是交叉编译，需要加上`--host=xxxx`\n5. `make && make install` \n6. 可以看见在__install 下面生成了如下目录，对应着头文件，库文件\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled.png) -->\n\n## dbus-cxx\n\n1. 下载源码 `git clone https://github.com/dbus-cxx/dbus-cxx.git`\n2. 添加环境变量，指定libsig++安装出来的pkgconfig的位置，该句可以加入你的shell配置文件中\n`export PKG_CONFIG_PATH=/home/flork/git/libsigc++-3.0.0/__install/lib/pkgconfig:$PKG_CONFIG_PATH`\n3. 按照这些步骤安装即可\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%201.png) -->\n\n编译需要添加指令`pkg-config --cflags --libs dbus-cxx-2.0`\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%202.png) -->\n\n# 例程\n\n> 例程来自官方文档例程，详细介绍去文档[dbus-cxx: Quick start example 0: A simple server and client](https://dbus-cxx.github.io/quick_start_example_0.html)\n> \n\n## server.cpp\n\n```cpp\n#include <dbus-cxx.h>\n#include <unistd.h>\n\ndouble add(double param1, double param2) { return param1 + param2; }\n\nint main()\n{\n    std::shared_ptr<DBus::Dispatcher> dispatcher = DBus::StandaloneDispatcher::create();\n\n    std::shared_ptr<DBus::Connection> conn = dispatcher->create_connection(DBus::BusType::SESSION);\n\n    if (conn->request_name(\"dbuscxx.quickstart_0.server\", DBUSCXX_NAME_FLAG_REPLACE_EXISTING) != DBus::RequestNameResponse::PrimaryOwner)\n        return 1;\n\n    // create an object on us\n    std::shared_ptr<DBus::Object> object = conn->create_object(\"/dbuscxx/quickstart_0\", DBus::ThreadForCalling::DispatcherThread);\n\n    // add a method that can be called over the dbus\n    object->create_method<double(double, double)>(\"dbuscxx.Quickstart\", \"add\", sigc::ptr_fun(add));\n\n    sleep(10);\n\n    return 0;\n}\n```\n\n## client.cpp\n\n```cpp\n#include <dbus-cxx.h>\n#include <iostream>\n\nint main()\n{\n    std::shared_ptr<DBus::Dispatcher> dispatcher;\n    dispatcher = DBus::StandaloneDispatcher::create();\n\n    std::shared_ptr<DBus::Connection> connection;\n    connection = dispatcher->create_connection(DBus::BusType::SESSION);\n\n    // create an object proxy, which stands in for a real object.\n    // a proxy exists over the dbus\n    std::shared_ptr<DBus::ObjectProxy> object;\n    object = connection->create_object_proxy(\"dbuscxx.quickstart_0.server\", \"/dbuscxx/quickstart_0\");\n\n    // a method proxy acts like a real method, but will go over the dbus\n    // to do its work.\n    DBus::MethodProxy<double(double, double)> &add_proxy = *(object->create_method<double(double, double)>(\"dbuscxx.Quickstart\", \"add\"));\n\n    double answer;\n    answer = add_proxy( 1.1, 2.2 );\n\n    std::cout << \"1.1 + 2.2 = \" << answer << std::endl;\n\n    return 0;\n}\n```\n\n## Makefile\n\n```cpp\n.PHONY:clean\n\nCXXFLAG\t\t\t  = -std=c++17 -O3\nPKGFLAG       = `pkg-config --cflags --libs dbus-cxx-2.0`\n\nSERVER_SRC\t\t= server.cpp\nCLIENT_SRC\t\t= client.cpp\n\nSERVER_TARGET   = server\nCLIENT_TARGET   = client\n\nall:$(SERVER_TARGET) $(CLIENT_TARGET)\n\n$(SERVER_TARGET):$(SERVER_SRC)\n\tg++ $(CXXFLAG)  $(SERVER_SRC) -o $(SERVER_TARGET) $(PKGFLAG) \n\n$(CLIENT_TARGET):$(CLIENT_SRC)\n\tg++ $(CXXFLAG) $(CLIENT_SRC) -o $(CLIENT_TARGET) $(PKGFLAG)\n\nclean:\n\t@if [ -e \"$(CLIENT_TARGET)\" ] ; then \\\n\t\techo \"rm $(CLIENT_TARGET)\" ; \\\n\t\trm $(CLIENT_TARGET) ; \\\n\tfi;\n\n\t@if [ -e \"$(SERVER_TARGET)\" ] ; then \\\n\t\techo \"rm $(SERVER_TARGET)\" ; \\\n\t\trm $(SERVER_TARGET) ; \\\n\tfi;\n```\n\n## 运行结果\n\n先运行 server ，再运行 client\n\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%203.png) -->","slug":"DBUS-CXX相关配置","published":1,"updated":"2023-01-16T08:02:11.826Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcyl582t0002l8vl65o4a4hc","content":"<h1 id=\"DBUS-CXX\"><a href=\"#DBUS-CXX\" class=\"headerlink\" title=\"DBUS-CXX\"></a>DBUS-CXX</h1><hr>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>DBUS-CXX是一个dbus协议基础上提供的C++ api封装。所以我们很多地方可以结合文档和例程直接看源码来进行学习，底层的很多都是linux的官方库。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p>需先了解DBUS基础知识，建议看DBUS官方文档</p>\n<p>DBUS-CXX也是建议看官方文档，各个配置环境也先<strong>仔细看对应的文档</strong>再操作</p>\n<p>DBUS-CXX的中文资料较少，耐心看完官方文档</p>\n<p><a href=\"https://dbus-cxx.github.io/index.html\">dbus-cxx: dbus-cxx Library</a></p>\n<p><a href=\"https://shangenpoden.pixnet.net/blog/post/249943675\">[C++]:libsigc++ programming @ 玄根白丁的部落格 :: 痞客邦 :: (pixnet.net)</a></p>\n<h1 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h1><h2 id=\"cmake\"><a href=\"#cmake\" class=\"headerlink\" title=\"cmake\"></a>cmake</h2><ol>\n<li><p>检查自己是否有cmake并且版本是否大于3.12，若都无，从<a href=\"https://cmake.org/download/\">该网站</a>下载cmake源码</p>\n</li>\n<li><p>解压cmake 源码，之后进入cmake目录执行 <code>sudo ./configure</code>,然后执行<code>sudo make &amp;&amp; make install</code></p>\n</li>\n</ol>\n<h2 id=\"libsigc\"><a href=\"#libsigc\" class=\"headerlink\" title=\"libsigc++\"></a>libsigc++</h2><blockquote>\n<p>从官方文档中可以看到，从压缩包build比git出来的项目更容易，git出来在make的时候会遇到错误</p>\n</blockquote>\n<ol>\n<li><p><code>sudo apt-get install mm-common</code>下载mm-common</p>\n</li>\n<li><p>下载源码 <code>wget https://download.gnome.org/sources/libsigc++/3.0/libsigc%2B%2B-3.0.0.tar.xz</code>  并解压缩，然后进入解压出来的目录</p>\n<blockquote>\n<p>这边选择3.0.0版本，3.2版本利用autotools编译会出现问题，暂时未找到解决方法</p>\n</blockquote>\n</li>\n<li><p><code>mkdir __install</code></p>\n</li>\n<li><p>之后执行<code>./configure  --prefix=$PWD/__install</code>,如果是交叉编译，需要加上<code>--host=xxxx</code></p>\n</li>\n<li><p><code>make &amp;&amp; make install</code> </p>\n</li>\n<li><p>可以看见在__install 下面生成了如下目录，对应着头文件，库文件</p>\n</li>\n</ol>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled.png) -->\n\n<h2 id=\"dbus-cxx\"><a href=\"#dbus-cxx\" class=\"headerlink\" title=\"dbus-cxx\"></a>dbus-cxx</h2><ol>\n<li>下载源码 <code>git clone https://github.com/dbus-cxx/dbus-cxx.git</code></li>\n<li>添加环境变量，指定libsig++安装出来的pkgconfig的位置，该句可以加入你的shell配置文件中<br><code>export PKG_CONFIG_PATH=/home/flork/git/libsigc++-3.0.0/__install/lib/pkgconfig:$PKG_CONFIG_PATH</code></li>\n<li>按照这些步骤安装即可</li>\n</ol>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%201.png) -->\n\n<p>编译需要添加指令<code>pkg-config --cflags --libs dbus-cxx-2.0</code></p>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%202.png) -->\n\n<h1 id=\"例程\"><a href=\"#例程\" class=\"headerlink\" title=\"例程\"></a>例程</h1><blockquote>\n<p>例程来自官方文档例程，详细介绍去文档<a href=\"https://dbus-cxx.github.io/quick_start_example_0.html\">dbus-cxx: Quick start example 0: A simple server and client</a></p>\n</blockquote>\n<h2 id=\"server-cpp\"><a href=\"#server-cpp\" class=\"headerlink\" title=\"server.cpp\"></a>server.cpp</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;dbus-cxx.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;unistd.h&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> param1, <span class=\"hljs-type\">double</span> param2)</span> </span>&#123; <span class=\"hljs-keyword\">return</span> param1 + param2; &#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    std::shared_ptr&lt;DBus::Dispatcher&gt; dispatcher = DBus::StandaloneDispatcher::<span class=\"hljs-built_in\">create</span>();<br><br>    std::shared_ptr&lt;DBus::Connection&gt; conn = dispatcher-&gt;<span class=\"hljs-built_in\">create_connection</span>(DBus::BusType::SESSION);<br><br>    <span class=\"hljs-keyword\">if</span> (conn-&gt;<span class=\"hljs-built_in\">request_name</span>(<span class=\"hljs-string\">&quot;dbuscxx.quickstart_0.server&quot;</span>, DBUSCXX_NAME_FLAG_REPLACE_EXISTING) != DBus::RequestNameResponse::PrimaryOwner)<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br><br>    <span class=\"hljs-comment\">// create an object on us</span><br>    std::shared_ptr&lt;DBus::Object&gt; object = conn-&gt;<span class=\"hljs-built_in\">create_object</span>(<span class=\"hljs-string\">&quot;/dbuscxx/quickstart_0&quot;</span>, DBus::ThreadForCalling::DispatcherThread);<br><br>    <span class=\"hljs-comment\">// add a method that can be called over the dbus</span><br>    object-&gt;<span class=\"hljs-built_in\">create_method</span>&lt;<span class=\"hljs-built_in\">double</span>(<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">double</span>)&gt;(<span class=\"hljs-string\">&quot;dbuscxx.Quickstart&quot;</span>, <span class=\"hljs-string\">&quot;add&quot;</span>, sigc::<span class=\"hljs-built_in\">ptr_fun</span>(add));<br><br>    <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">10</span>);<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"client-cpp\"><a href=\"#client-cpp\" class=\"headerlink\" title=\"client.cpp\"></a>client.cpp</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;dbus-cxx.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    std::shared_ptr&lt;DBus::Dispatcher&gt; dispatcher;<br>    dispatcher = DBus::StandaloneDispatcher::<span class=\"hljs-built_in\">create</span>();<br><br>    std::shared_ptr&lt;DBus::Connection&gt; connection;<br>    connection = dispatcher-&gt;<span class=\"hljs-built_in\">create_connection</span>(DBus::BusType::SESSION);<br><br>    <span class=\"hljs-comment\">// create an object proxy, which stands in for a real object.</span><br>    <span class=\"hljs-comment\">// a proxy exists over the dbus</span><br>    std::shared_ptr&lt;DBus::ObjectProxy&gt; object;<br>    object = connection-&gt;<span class=\"hljs-built_in\">create_object_proxy</span>(<span class=\"hljs-string\">&quot;dbuscxx.quickstart_0.server&quot;</span>, <span class=\"hljs-string\">&quot;/dbuscxx/quickstart_0&quot;</span>);<br><br>    <span class=\"hljs-comment\">// a method proxy acts like a real method, but will go over the dbus</span><br>    <span class=\"hljs-comment\">// to do its work.</span><br>    DBus::MethodProxy&lt;<span class=\"hljs-built_in\">double</span>(<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">double</span>)&gt; &amp;add_proxy = *(object-&gt;<span class=\"hljs-built_in\">create_method</span>&lt;<span class=\"hljs-built_in\">double</span>(<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">double</span>)&gt;(<span class=\"hljs-string\">&quot;dbuscxx.Quickstart&quot;</span>, <span class=\"hljs-string\">&quot;add&quot;</span>));<br><br>    <span class=\"hljs-type\">double</span> answer;<br>    answer = <span class=\"hljs-built_in\">add_proxy</span>( <span class=\"hljs-number\">1.1</span>, <span class=\"hljs-number\">2.2</span> );<br><br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;1.1 + 2.2 = &quot;</span> &lt;&lt; answer &lt;&lt; std::endl;<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Makefile\"><a href=\"#Makefile\" class=\"headerlink\" title=\"Makefile\"></a>Makefile</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">.PHONY:clean<br><br>CXXFLAG\t\t\t  = -std=c++<span class=\"hljs-number\">17</span> -O3<br>PKGFLAG       = `pkg-config --cflags --libs dbus-cxx<span class=\"hljs-number\">-2.0</span>`<br><br>SERVER_SRC\t\t= server.cpp<br>CLIENT_SRC\t\t= client.cpp<br><br>SERVER_TARGET   = server<br>CLIENT_TARGET   = client<br><br>all:$(SERVER_TARGET) $(CLIENT_TARGET)<br><br>$(SERVER_TARGET):$(SERVER_SRC)<br>\tg++ $(CXXFLAG)  $(SERVER_SRC) -o $(SERVER_TARGET) $(PKGFLAG) <br><br>$(CLIENT_TARGET):$(CLIENT_SRC)<br>\tg++ $(CXXFLAG) $(CLIENT_SRC) -o $(CLIENT_TARGET) $(PKGFLAG)<br><br>clean:<br>\t@<span class=\"hljs-keyword\">if</span> [ -e <span class=\"hljs-string\">&quot;$(CLIENT_TARGET)&quot;</span> ] ; then \\<br>\t\techo <span class=\"hljs-string\">&quot;rm $(CLIENT_TARGET)&quot;</span> ; \\<br>\t\trm $(CLIENT_TARGET) ; \\<br>\tfi;<br><br>\t@<span class=\"hljs-keyword\">if</span> [ -e <span class=\"hljs-string\">&quot;$(SERVER_TARGET)&quot;</span> ] ; then \\<br>\t\techo <span class=\"hljs-string\">&quot;rm $(SERVER_TARGET)&quot;</span> ; \\<br>\t\trm $(SERVER_TARGET) ; \\<br>\tfi;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><p>先运行 server ，再运行 client</p>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%203.png) -->","site":{"data":{}},"excerpt":"","more":"<h1 id=\"DBUS-CXX\"><a href=\"#DBUS-CXX\" class=\"headerlink\" title=\"DBUS-CXX\"></a>DBUS-CXX</h1><hr>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>DBUS-CXX是一个dbus协议基础上提供的C++ api封装。所以我们很多地方可以结合文档和例程直接看源码来进行学习，底层的很多都是linux的官方库。</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p>需先了解DBUS基础知识，建议看DBUS官方文档</p>\n<p>DBUS-CXX也是建议看官方文档，各个配置环境也先<strong>仔细看对应的文档</strong>再操作</p>\n<p>DBUS-CXX的中文资料较少，耐心看完官方文档</p>\n<p><a href=\"https://dbus-cxx.github.io/index.html\">dbus-cxx: dbus-cxx Library</a></p>\n<p><a href=\"https://shangenpoden.pixnet.net/blog/post/249943675\">[C++]:libsigc++ programming @ 玄根白丁的部落格 :: 痞客邦 :: (pixnet.net)</a></p>\n<h1 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h1><h2 id=\"cmake\"><a href=\"#cmake\" class=\"headerlink\" title=\"cmake\"></a>cmake</h2><ol>\n<li><p>检查自己是否有cmake并且版本是否大于3.12，若都无，从<a href=\"https://cmake.org/download/\">该网站</a>下载cmake源码</p>\n</li>\n<li><p>解压cmake 源码，之后进入cmake目录执行 <code>sudo ./configure</code>,然后执行<code>sudo make &amp;&amp; make install</code></p>\n</li>\n</ol>\n<h2 id=\"libsigc\"><a href=\"#libsigc\" class=\"headerlink\" title=\"libsigc++\"></a>libsigc++</h2><blockquote>\n<p>从官方文档中可以看到，从压缩包build比git出来的项目更容易，git出来在make的时候会遇到错误</p>\n</blockquote>\n<ol>\n<li><p><code>sudo apt-get install mm-common</code>下载mm-common</p>\n</li>\n<li><p>下载源码 <code>wget https://download.gnome.org/sources/libsigc++/3.0/libsigc%2B%2B-3.0.0.tar.xz</code>  并解压缩，然后进入解压出来的目录</p>\n<blockquote>\n<p>这边选择3.0.0版本，3.2版本利用autotools编译会出现问题，暂时未找到解决方法</p>\n</blockquote>\n</li>\n<li><p><code>mkdir __install</code></p>\n</li>\n<li><p>之后执行<code>./configure  --prefix=$PWD/__install</code>,如果是交叉编译，需要加上<code>--host=xxxx</code></p>\n</li>\n<li><p><code>make &amp;&amp; make install</code> </p>\n</li>\n<li><p>可以看见在__install 下面生成了如下目录，对应着头文件，库文件</p>\n</li>\n</ol>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled.png) -->\n\n<h2 id=\"dbus-cxx\"><a href=\"#dbus-cxx\" class=\"headerlink\" title=\"dbus-cxx\"></a>dbus-cxx</h2><ol>\n<li>下载源码 <code>git clone https://github.com/dbus-cxx/dbus-cxx.git</code></li>\n<li>添加环境变量，指定libsig++安装出来的pkgconfig的位置，该句可以加入你的shell配置文件中<br><code>export PKG_CONFIG_PATH=/home/flork/git/libsigc++-3.0.0/__install/lib/pkgconfig:$PKG_CONFIG_PATH</code></li>\n<li>按照这些步骤安装即可</li>\n</ol>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%201.png) -->\n\n<p>编译需要添加指令<code>pkg-config --cflags --libs dbus-cxx-2.0</code></p>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%202.png) -->\n\n<h1 id=\"例程\"><a href=\"#例程\" class=\"headerlink\" title=\"例程\"></a>例程</h1><blockquote>\n<p>例程来自官方文档例程，详细介绍去文档<a href=\"https://dbus-cxx.github.io/quick_start_example_0.html\">dbus-cxx: Quick start example 0: A simple server and client</a></p>\n</blockquote>\n<h2 id=\"server-cpp\"><a href=\"#server-cpp\" class=\"headerlink\" title=\"server.cpp\"></a>server.cpp</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;dbus-cxx.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;unistd.h&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> param1, <span class=\"hljs-type\">double</span> param2)</span> </span>&#123; <span class=\"hljs-keyword\">return</span> param1 + param2; &#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    std::shared_ptr&lt;DBus::Dispatcher&gt; dispatcher = DBus::StandaloneDispatcher::<span class=\"hljs-built_in\">create</span>();<br><br>    std::shared_ptr&lt;DBus::Connection&gt; conn = dispatcher-&gt;<span class=\"hljs-built_in\">create_connection</span>(DBus::BusType::SESSION);<br><br>    <span class=\"hljs-keyword\">if</span> (conn-&gt;<span class=\"hljs-built_in\">request_name</span>(<span class=\"hljs-string\">&quot;dbuscxx.quickstart_0.server&quot;</span>, DBUSCXX_NAME_FLAG_REPLACE_EXISTING) != DBus::RequestNameResponse::PrimaryOwner)<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br><br>    <span class=\"hljs-comment\">// create an object on us</span><br>    std::shared_ptr&lt;DBus::Object&gt; object = conn-&gt;<span class=\"hljs-built_in\">create_object</span>(<span class=\"hljs-string\">&quot;/dbuscxx/quickstart_0&quot;</span>, DBus::ThreadForCalling::DispatcherThread);<br><br>    <span class=\"hljs-comment\">// add a method that can be called over the dbus</span><br>    object-&gt;<span class=\"hljs-built_in\">create_method</span>&lt;<span class=\"hljs-built_in\">double</span>(<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">double</span>)&gt;(<span class=\"hljs-string\">&quot;dbuscxx.Quickstart&quot;</span>, <span class=\"hljs-string\">&quot;add&quot;</span>, sigc::<span class=\"hljs-built_in\">ptr_fun</span>(add));<br><br>    <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">10</span>);<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"client-cpp\"><a href=\"#client-cpp\" class=\"headerlink\" title=\"client.cpp\"></a>client.cpp</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;dbus-cxx.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    std::shared_ptr&lt;DBus::Dispatcher&gt; dispatcher;<br>    dispatcher = DBus::StandaloneDispatcher::<span class=\"hljs-built_in\">create</span>();<br><br>    std::shared_ptr&lt;DBus::Connection&gt; connection;<br>    connection = dispatcher-&gt;<span class=\"hljs-built_in\">create_connection</span>(DBus::BusType::SESSION);<br><br>    <span class=\"hljs-comment\">// create an object proxy, which stands in for a real object.</span><br>    <span class=\"hljs-comment\">// a proxy exists over the dbus</span><br>    std::shared_ptr&lt;DBus::ObjectProxy&gt; object;<br>    object = connection-&gt;<span class=\"hljs-built_in\">create_object_proxy</span>(<span class=\"hljs-string\">&quot;dbuscxx.quickstart_0.server&quot;</span>, <span class=\"hljs-string\">&quot;/dbuscxx/quickstart_0&quot;</span>);<br><br>    <span class=\"hljs-comment\">// a method proxy acts like a real method, but will go over the dbus</span><br>    <span class=\"hljs-comment\">// to do its work.</span><br>    DBus::MethodProxy&lt;<span class=\"hljs-built_in\">double</span>(<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">double</span>)&gt; &amp;add_proxy = *(object-&gt;<span class=\"hljs-built_in\">create_method</span>&lt;<span class=\"hljs-built_in\">double</span>(<span class=\"hljs-type\">double</span>, <span class=\"hljs-type\">double</span>)&gt;(<span class=\"hljs-string\">&quot;dbuscxx.Quickstart&quot;</span>, <span class=\"hljs-string\">&quot;add&quot;</span>));<br><br>    <span class=\"hljs-type\">double</span> answer;<br>    answer = <span class=\"hljs-built_in\">add_proxy</span>( <span class=\"hljs-number\">1.1</span>, <span class=\"hljs-number\">2.2</span> );<br><br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;1.1 + 2.2 = &quot;</span> &lt;&lt; answer &lt;&lt; std::endl;<br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Makefile\"><a href=\"#Makefile\" class=\"headerlink\" title=\"Makefile\"></a>Makefile</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">.PHONY:clean<br><br>CXXFLAG\t\t\t  = -std=c++<span class=\"hljs-number\">17</span> -O3<br>PKGFLAG       = `pkg-config --cflags --libs dbus-cxx<span class=\"hljs-number\">-2.0</span>`<br><br>SERVER_SRC\t\t= server.cpp<br>CLIENT_SRC\t\t= client.cpp<br><br>SERVER_TARGET   = server<br>CLIENT_TARGET   = client<br><br>all:$(SERVER_TARGET) $(CLIENT_TARGET)<br><br>$(SERVER_TARGET):$(SERVER_SRC)<br>\tg++ $(CXXFLAG)  $(SERVER_SRC) -o $(SERVER_TARGET) $(PKGFLAG) <br><br>$(CLIENT_TARGET):$(CLIENT_SRC)<br>\tg++ $(CXXFLAG) $(CLIENT_SRC) -o $(CLIENT_TARGET) $(PKGFLAG)<br><br>clean:<br>\t@<span class=\"hljs-keyword\">if</span> [ -e <span class=\"hljs-string\">&quot;$(CLIENT_TARGET)&quot;</span> ] ; then \\<br>\t\techo <span class=\"hljs-string\">&quot;rm $(CLIENT_TARGET)&quot;</span> ; \\<br>\t\trm $(CLIENT_TARGET) ; \\<br>\tfi;<br><br>\t@<span class=\"hljs-keyword\">if</span> [ -e <span class=\"hljs-string\">&quot;$(SERVER_TARGET)&quot;</span> ] ; then \\<br>\t\techo <span class=\"hljs-string\">&quot;rm $(SERVER_TARGET)&quot;</span> ; \\<br>\t\trm $(SERVER_TARGET) ; \\<br>\tfi;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><p>先运行 server ，再运行 client</p>\n<!-- ![Untitled](DBUS-CXX%20ea3c1120e10e4ed2bb59ae12c9b37443/Untitled%203.png) -->"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}